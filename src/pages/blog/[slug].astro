---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import { ArrowLeft } from "lucide-astro";
import type { CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";

export const prerender = true;

interface Props {
  post: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
  const blogPosts = await getCollection("blog");

  if (!blogPosts?.length) {
    throw new Error("No blog posts found");
  }

  return blogPosts.map((post: any) => {
    if (!post?.slug) {
      throw new Error(`Blog post missing slug: ${JSON.stringify(post)}`);
    }
    return {
      params: { slug: post.slug },
      props: { post },
    };
  });
}

const { post } = Astro.props;

if (!post) {
  throw new Error(`Post not found for current route`);
}

const { Content } = await post.render();
---

<Layout title={post.data.title}>
  <main class="flex-grow container mx-auto px-4 py-8 max-w-3xl">
    <a
      href="/blog"
      class="inline-flex items-center text-sm text-gray-600 hover:text-gray-900 mb-6 transition-colors"
    >
      <ArrowLeft class="h-4 w-4 mr-2" />
      Back to all posts
    </a>
    <article class="prose">
      {
        post.data.cover && (
          <Image
            src={post.data.cover}
            alt={post.data.title}
            class="object-cover object-center !m-0 aspect-square block"
            width={600}
            height={600}
          />
        )
      }
      <h1 class="md:!text-5xl md:!leading-[1.2]">{post.data.title}</h1>
      <div class="flex items-center text-sm text-gray-600 mb-2 not-prose">
        <img
          src="/avatar.jpeg"
          alt="Author avatar"
          class="w-10 h-10 rounded-full mr-4"
        />
        <div>
          <p class="font-medium m-0">{post.data.author}</p>
          <p class="m-0">
            Published on {
              post.data.date.toLocaleDateString("en-US", {
                year: "numeric",
                month: "long",
                day: "numeric",
              })
            }
          </p>
        </div>
      </div>
      <div class="mb-2">
        {
          post.data.tags.map((tag) => (
            <span class="text-xs bg-gray-200 rounded-md px-2 py-1">{tag}</span>
          ))
        }
      </div>
      <p class="lead">{post.data.excerpt}</p>
      <hr class="border-neutral-200 -mx-4 my-12" />
      <div>
        <Content />
      </div>
    </article>
  </main>
</Layout>
